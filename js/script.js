window.addEventListener("DOMContentLoaded", () => {
	// Tabs
	// 1 - –ü–µ—Ä–µ–º–∏–∫–∞—á –∫–∞—Ä—Ç–∏–Ω–∫–∏ ‚úÖ
	// 2 - –¢–∞–π–º–µ—Ä ‚úÖ
	// 3 - –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ ‚úÖ
	// 4 - –ö–ª–∞—Å –∫–∞—Ä—Ç–æ—á–∫–∏ ‚úÖ
	// 5 - –§–æ—Ä–º–∞
	// 6 - –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—è–º –ø—Ä–æ —Å—Ç–∞—Ç—É—Å

	// –ü–µ—Ä–µ–º–∏–∫–∞—á –∫–∞—Ä—Ç–∏–Ω–∫–∏

	// –ü–æ–ª—É—á–∞—î–º —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏
	const tabContent = document.querySelectorAll(".tabcontent"),
		tabs = document.querySelectorAll(".tabheader__item"),
		tabsParent = document.querySelector(".tabheader__items");
	// –•–æ–≤–∞—î–º –¥–ª—è –ø–æ—á–∞—Ç–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç
	function hideContent() {
		tabContent.forEach(
			(tab) => {
				tab.classList.add("hide");
				tab.classList.remove("show", "fade");
			},
			tabs.forEach((item) => {
				item.classList.remove("tabheader__item_active");
			})
		);
	}
	// –ü–æ–∫–∞–∑—É—î–º —Å–∞–º–∏–π –ø–µ—Ä—à–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Ñ—É–Ω–∫—Ü—ñ—è —Å–ª–∂–∏—Ç—å –ø–µ—Ä–µ–º–∏–∫–∞—á–æ–º
	function showContent(i = 0) {
		tabContent[i].classList.add("show", "fade");
		tabContent[i].classList.remove("hide");
		tabs[i].classList.add("tabheader__item_active");
	}
	// –í–∏–∫–ª–∏–∫–∞—î–º —Ñ—É–Ω–∫—Ü—ñ—ó
	hideContent();
	showContent();
	// –î–µ–ª–µ–≥—É–≤–∞–Ω—è –¥–ª—è –∫–ª—ñ–∫—É —Ç–∞ –ø–µ—Ä–µ–¥–∞—á—ñ —ñ–Ω–¥–µ–∫—Å—É –∫–Ω–æ–ø–∫–∏
	tabsParent.addEventListener("click", (e) => {
		if (e.target && e.target.classList.contains("tabheader__item")) {
			tabs.forEach((item, i) => {
				if (item == e.target) {
					hideContent();
					showContent(i);
				}
			});
		}
	});

	// -----

	// –¢–∞–π–º–µ—Ä
	// –ß–∞—Å –¥–æ–∫–∏ –º–∞—î —ñ—Ç–∏ —Ç–∞–π–º–µ—Ä
	const deadline = "2023-7-23";

	// –†–æ–±–∏–º —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏
	function setClock(endTime) {
		const t = Math.floor(Date.parse(endTime) - Date.parse(new Date())),
			days = Math.floor(t / (24 * 60 * 60 * 1000)),
			hours = Math.floor((t / (60 * 60 * 1000)) % 24),
			minutes = Math.floor((t / 60 / 1000) % 60),
			seconds = Math.floor((t / 1000) % 60);

		return {
			total: t,
			days: days,
			hours: hours,
			minutes: minutes,
			seconds: seconds,
		};
	}

	// –ü–æ–ª—É—á–∞—î–º –µ–ª–µ–º–µ–Ω—Ç–∏ —ñ –≤—Å—Ç–∞–≤–ª—è—î–º –Ω–∞ —Å–∞–π—Ç
	function updateClock(endTime) {
		const days = document.querySelector("#days"),
			hours = document.querySelector("#hours"),
			minutes = document.querySelector("#minutes"),
			seconds = document.querySelector("#seconds"),
			timerUpdateFunction = setInterval(changeValues, 1000);

		changeValues();
		function changeValues() {
			const t = setClock(endTime);
			days.innerHTML = chechZero(t.days);
			hours.innerHTML = chechZero(t.hours);
			minutes.innerHTML = chechZero(t.minutes);
			seconds.innerHTML = chechZero(t.seconds);
		}
	}

	function chechZero(num) {
		return num >= 0 && num < 10 ? `0${num}` : num;
	}
	updateClock(deadline);

	// -----

	// –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ

	const btns = document.querySelectorAll("[data-modal]"),
		closeBtn = document.querySelector("[data-close]"),
		modal = document.querySelector(".modal");
	//
	function openModal() {
		modal.classList.add("show", "fadeIn");
		modal.classList.remove("hide", "fadeOut");
		document.body.style.overflow = "hidden";
		clearInterval(modalTimer);
	}
	function closeModal() {
		modal.classList.add("hide", "fadeOut");
		modal.classList.remove("show", "fadeIn");
		document.body.style.overflow = "";
	}
	//
	btns.forEach((btn) => {
		btn.addEventListener("click", openModal);
	});
	closeBtn.addEventListener("click", () => {
		closeModal();
	});
	//
	modal.addEventListener("click", (e) => {
		const target = e.target;
		if (target === modal || e.target.getAttribute("data-close") == "") {
			closeModal();
		}
	});
	//
	document.addEventListener("keydown", (e) => {
		if (e.code == "Escape" && modal.classList.contains("show")) {
			closeModal();
		}
	});
	const modalTimer = setTimeout(openModal, 50000);
	//
	function showModalByScroll() {
		if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {
			openModal();
			window.removeEventListener("scroll", showModalByScroll);
		}
	}
	window.addEventListener("scroll", showModalByScroll);
	//

	// -----

	// –ö–∞—Ä—Ç–æ—á–∫–∏

	class MenuCard {
		//
		constructor(src, alt, title, description, price, selector, ...clases) {
			this.src = src;
			this.alt = alt;
			this.title = title;
			this.description = description;
			this.price = price;
			this.clases = clases;
			this.parent = document.querySelector(selector);
			this.dollar = 37.2;
			this.swapper();
		}
		//
		swapper() {
			this.price = Math.floor(this.price * this.dollar);
		}
		//
		create() {
			const element = document.createElement("div");
			//
			if (this.clases.length == 0) {
				this.element = "menu__item";
				element.classList.add(this.element);
			} else {
				this.clases.forEach((className) => element.classList.add(className));
			}
			//
			element.innerHTML = `
			 <img src="${this.src}" alt="${this.alt}" />
			 <h3 class="menu__item-subtitle">${this.title}"</h3>
			 <div class="menu__item-descr"> ${this.description} </div>
			 <div class="menu__item-divider"></div>
			 <div class="menu__item-price">
			  <div class="menu__item-cost">–¶–µ–Ω–∞:</div>
			  <div class="menu__item-total"><span>${this.price}</span> –≥—Ä–Ω/–¥–µ–Ω—å</div>
			 </div> `;
			this.parent.append(element);
		}
	}
	//
	const getResource = async (url) => {
		const res = await fetch(url);
		//
		if (!res.ok) {
			throw new Error(`Could not fetch ${url}, status ${res.status}`);
		}
		//
		return await res.json();
	};
	//
	// getResource("http://localhost:3000/menu").then((date) => {
	// 	date.forEach(({ img, altimg, title, descr, price }) => {
	// 		new MenuCard(img, altimg, title, descr, price, ".menu .container").create();
	// 	});
	// });
	axios.get("http://localhost:3000/menu").then((data) => {
		data.data.forEach(({ img, altimg, title, descr, price }) => {
			new MenuCard(img, altimg, title, descr, price, ".menu .container").create();
		});
	});

	// -----

	// –§–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
	const forms = document.querySelectorAll("form");
	// –ü–µ—Ä–µ–±–µ—Ä–∞—î–º —Ñ–æ—Ä–º–∏ —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î–º —ó—Ö —É —Ñ—É–Ω–∫—Ü—ñ—é
	forms.forEach((form) => {
		bindPostInfo(form);
	});

	function bindPostInfo(form) {
		// –°—Ç–∞—Ç—É—Å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—è —è–∫–µ –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—å –Ω–∞ —Å–∞–π—Ç—ñ
		const statusMessage = {
			loading: "img/form/spinner.svg",
			succes: "–î—è–∫—É! –ú–∏ —Å–∫–æ—Ä–æ –∑–≤'—è–∂–µ–º–æ—Å—å –∑ –≤–∞–º–∏ üí¨",
			failed: "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫",
		};
		// –§—É–Ω–∫—Ü—ñ—è –∑–∞–≥–æ—Ç–æ–≤–∫–∞ —è–∫–∞ –±—É–¥–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–∏ —ó—ó –≤–∏–∫–ª–∏—Ü—ñ
		const postInfo = async (url, date) => {
			const res = await fetch(url, {
				method: "POST",
				headers: {
					"Content-type": "application/json",
				},
				body: date,
			});
			return await res.json();
		};
		//
		form.addEventListener("submit", (e) => {
			e.preventDefault();
			// –ó–∞–¥–∞—î–º –±–∞–∑–æ–≤–µ –∑–Ω–∞—á–µ–Ω—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω—ñ –¥–∞–Ω–∏—Ö
			const status = document.createElement("img");
			status.src = statusMessage.loading;
			status.style.cssText = `display: block; margin: 0 auto;`;
			// –ü–æ–º—ñ—â–∞—î–º —Å–ø—ñ–Ω–µ—Ä –Ω–∞ —Å–∞–π—Ç –ø—ñ—Å–ª—è —Ñ–æ—Ä–º–∏
			form.insertAdjacentElement("afterend", status);
			// –ü–æ–ª—É—á–∞—î–º –¥–∞–Ω—ñ –∑ —Ñ–æ—Ä–º–∏
			const formDate = new FormData(form);
			const json = JSON.stringify(Object.fromEntries(formDate.entries()));
			//
			postInfo("http://localhost:3000/requests", json)
				.then((date) => {
					console.log(date);
					showStatusModal(statusMessage.succes);
					status.remove();
				})
				.catch(() => {
					showStatusModal(statusMessage.failed);
				})
				.finally(() => {
					form.reset();
				});
		});
	}
	//

	// -----

	// –ù–æ–≤–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º

	function showStatusModal(message) {
		//
		const parentModal = document.querySelector(".modal__dialog");
		parentModal.classList.add("hide"); // –∑–∞–∫—Ä–∏–≤–∞—î–º –º–∏–Ω—É–ª–µ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
		openModal(); // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º —É–∂–µ –∑ –Ω–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏
		//
		const thanksModal = document.createElement("div");
		thanksModal.classList.add("modal__dialog");
		thanksModal.innerHTML = `
		 <div class="modal__content">
       <div data-close class="modal__close">√ó</div>
		 <div class="modal__title">${message}</div>`;

		document.querySelector(".modal").append(thanksModal);
		setTimeout(() => {
			thanksModal.remove();
			parentModal.classList.add("show");
			parentModal.classList.remove("hide");
		}, 5000);
	}

	// –°–ª–∞–π–¥–µ—Ä

	const slider = document.querySelector(".offer__slider"), // –í–µ—Å—å –æ–±–≥–æ—Ä—Ç–∫–∞ —Å–ª–∞–π–¥–µ—Ä–∞ —â–æ–± –ø–æ–≤—ñ—Å–∏—Ç–∏ –ø–æ–∑–∏—à–∏–Ω —Ä–µ–ª–∞—Ç—ñ–≤
		slidesWrapper = document.querySelector(".offer__slider-wrapper"), // –ì–æ–ª–æ–≤–Ω–∞ –æ–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è —Å–ª–µ–π–¥–µ—Ä—É
		slidesFiled = document.querySelector(".offer_slider-inner"), // –û–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è –≤—Å—ñ—Ö —Å–ª–∞–π–¥–µ—Ä—ñ–≤
		slides = document.querySelectorAll(".offer__slide"), // –û–±–≥–æ—Ä—Ç–∫–∞ –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
		back = document.querySelector(".offer__slider-prev"), // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
		next = document.querySelector(".offer__slider-next"), // –ö–Ω–æ–ø–∫–∞ –≤–ø–µ—Ä–µ–¥
		total = document.querySelector("#total"), // –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–æ–∫/—Å–ª–∞–π–¥–µ—Ä—ñ–≤
		current = document.querySelector("#current"), // –ü–æ—Ç–æ—á–Ω–∏–π —Å–ª–∞–π–¥–µ—Ä
		width = getComputedStyle(slidesWrapper).width; // –®–∏—Ä–∏–Ω–∞ —Å–ª–∞–π–¥–µ—Ä–∞
	//
	let sliderIndex = 1;
	let offset = 0;

	current.textContent = chechZero(sliderIndex);
	total.textContent = chechZero(slides.length);
	//
	slidesFiled.style.width = 100 * slides.length + "%";
	slidesFiled.style.display = "flex";
	slidesFiled.style.transition = "0.5s all";
	slidesWrapper.style.overflow = "hidden";
	slider.style.position = "relative";

	//
	next.addEventListener("click", () => {
		if (offset == +width.slice(0, width.length - 2) * (slides.length - 1)) {
			offset = 0;
		} else {
			offset += +width.slice(0, width.length - 2);
		}

		slidesFiled.style.transform = `translateX(-${offset}px)`;

		if (sliderIndex == slides.length) {
			sliderIndex = 1;
		} else {
			sliderIndex++;
		}

		updateInfoSlide();
	});

	back.addEventListener("click", () => {
		if (offset == 0) {
			offset = +width.slice(0, width.length - 2) * (slides.length - 1);
		} else {
			offset -= +width.slice(0, width.length - 2);
		}

		slidesFiled.style.transform = `translateX(-${offset}px)`;

		if (sliderIndex == 1) {
			sliderIndex = slides.length;
		} else {
			sliderIndex--;
		}

		updateInfoSlide();
	});
	//

	const indicators = document.createElement("ol");
	const dots = [];
	indicators.classList.add("carousel-indicators");
	indicators.style.cssText = `
	position: absolute;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 15;
	display: flex;
	justify-content: center;
	margin-right: 15%;
	margin-left: 15%;
	list-style: none;
	`;
	slider.append(indicators);

	for (let i = 0; i < slides.length; i++) {
		const dot = document.createElement("li");
		dot.setAttribute("dot-slide-to", i + 1);
		dot.style.cssText = `box-sizing: content-box;
		flex: 0 1 auto;
		width: 30px;
		height: 6px;
		margin-right: 3px;
		margin-left: 3px;
		cursor: pointer;
		background-color: #fff;
		background-clip: padding-box;
		border-top: 10px solid transparent;
		border-bottom: 10px solid transparent;
		opacity: 0.5;
		transition: opacity 0.6s ease;`;
		indicators.append(dot);

		if (i == 0) {
			dot.style.opacity = "1";
		}

		dots.push(dot);
	}
	//

	dots.forEach((dot) => {
		dot.addEventListener("click", (e) => {
			const target = e.target;
			const slideTo = target.getAttribute("dot-slide-to");

			sliderIndex = slideTo;

			offset = +width.slice(0, width.length - 2) * (slideTo - 1);
			slidesFiled.style.transform = `translateX(-${offset}px)`;

			updateInfoSlide();
		});
	});

	function updateInfoSlide() {
		current.textContent = chechZero(sliderIndex);
		//
		dots.forEach((dot) => (dot.style.opacity = "0.5"));
		dots[sliderIndex - 1].style.opacity = "1";
	}
});
